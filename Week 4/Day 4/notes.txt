Join Table = JT for short

dealerships has_many cars
cars belongs_to dealerships
join table has many feature_id and car_id

JT has car_id and feature_id
car and feature have a relationship through the JT

rails g model CarFeature car_id:integer feature_id:integer
class CarFeature 
  belongs_to :car
  belongs_to :feature
  has_many :car_features  <-pluralize because has_many; will return a collection
end

belongs_to_and_has_many is no longer used because it requires specific naming in your jointable

car
  has_many :features, through: :car_features
end

feature
  has_many :cars, through: :car_features
end

car = Car.find 5
car.car_features[0].features

car.features

feature.cars <number>would return all cars with a certain feature

for checkboxes
- @features.each do |feature|
  %li
    = check_box 'car[feature_ids][]', feature.id, true <- true means checked
    = check_box 'car[feature_ids][]', feature.id, @car.features.include?(feature) <- true means checked
    = feature.name

def car_params
  :make,
  :model,
  :year,
  :feature_ids []

end

reserve words include 'model'

no routes for join table

BOOTSTRAP HOWTO FOR RAILS
move all bootstrap things to vendor/assets

inside of config/application.rb do
  config.assets.paths << "#{Rails}/vendor/fonts"
inside app/assets/stylesheets/application.css
  *= require bootstrap.min above require_tree . and require_self. should still be grey. also include custom css
inside app/assets/stylesheets/application.js
  //= require boostrap.min


every template has its own custom file. include or paste into stylesheets
if the template includes a theme, throw that in too

read over grid media queries in bootstrap

when i have made changes=
git add -A
git commit -m "changes and such"
git push origin master
request a pull request

when i want to update my local repo with the online origin=
git pull upstream master
git push origin master


